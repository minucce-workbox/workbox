/*
	Code should be used only for educational, documentation and modding purposes
*/


org 0x1f2d, 0x00


;
;  Write new palette fade colors
;
;  -  vblank (active) = safe


do_fade:
	bit 2, e						; ff90(0,1) = (white, black)
	jr nz, @@fade_black



@@fade_white:
	ld h, 0xd0
	jr @@fade_type



@@fade_black:
	ld h, 0xd2


; ====================================================
; ====================================================


@@fade_type:
	bit 6, a						; (0,1) = (fade-in, fade-out)
	jr nz, @@fade_out



@@fade_in:
	xor a, 0x03



@@fade_out:
	and a, 0x03
	rra								; 0x80 tables
	rra
	ld l, a


	ld a, h
	adc a, 0x00
	ld h, a


; ============================================================
; ============================================================


	ld a, 0x07						; wram bank 7
	ldh (0x70), a


	ld a, 0x80						; reset index
	ldh (0x68), a
	ldh (0x6a), a


	ld b, 32*2 / 2



@@loop:
	ldi a, (hl)						; bgp color
	ldh (0x69), a

	ldi a, (hl)
	ldh (0x69), a


	ldi a, (hl)						; obj color
	ldh (0x6b), a

	ldi a, (hl)
	ldh (0x6b), a


	dec b
	jr nz, @@loop


	xor a							; wram bank 1
	ldh (0x70), a

	ret



; #####################################################
; #####################################################



;  Write new tilemaps on room loading
;
;
;  -  vblank (on), vram (off), timer (off)


load_room_tilemap:
	ld hl, 0xcb00					; tilemap



@@load_loop:
	ldi a, (hl)						; vram high
	ld d, a

	or a							; 00 = stop
	ret z


	ldi a, (hl)						; vram low
	ld e, a


; =========================================================
; =========================================================


	push hl							; map src
	push de							; vram dst


	ld bc, 0x0e20					; switch to color data
	add hl, bc


	ld a, 0xff						; vram bank 1
	call @@write_tilemap


; =========================================================
; =========================================================


	pop de							; vram dst
	pop hl							; src ptr


	xor a							; vram bank 0
	call @@write_tilemap


	jr @@load_loop



; /////////////////////////////////////////////////////////
; /////////////////////////////////////////////////////////



@@write_tilemap:
	ldh (0x4f), a					; vram bank


	call @@wait_vram				; upper row
	inc e
	call @@wait_vram


	ld a, e							; switch vram rows
	add a, 0x1f
	ld e, a


	call @@wait_vram				; lower row
	inc e
	call @@wait_vram


	ret



; /////////////////////////////////////////////////////////
; /////////////////////////////////////////////////////////



@@wait_vram:
	ldh a, (0x41)					; wait blanking
	and a, 0x02
	jr nz, @@wait_vram


; ==========================================================
; ==========================================================


	ldi a, (hl)						; write vram
	ld (de), a

	ret


warnpc 0x1fab
