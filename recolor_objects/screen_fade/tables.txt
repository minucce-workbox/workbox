/*
	Code should be used only for educational, documentation and modding purposes
*/


; 68a9-6a17 = palette asm code


;
;  Create palette fading tables  (white, black)
;


org 0x6a17, 0x0b


create_fade_tables:
	push bc


	ld a, 0x07					; wram bank 7
	ldh (0x70), a


	ld hl, 0xd000				; palette tables  (0x40 * 4 each)
								; d000 = fade white
								; d200 = fade black
								;
								; d400 = fade white  (copy)
								; d600 = fade black  (copy)


	ld a, 0x80					; reset palette index
	ldh (0x68), a
	ldh (0x6a), a


; =====================================================
; =====================================================


	call @read_table			; 0% white intensity


	ld c, 0x0a					; 33.3% white intensity
	call @fade_table


	ld c, 0x15					; 66.6% white intensity
	call @fade_table


	ld c, 0xff					; 100% white intensity
	call @fill_table


; =====================================================
; =====================================================


	call @read_table			; 0% black intensity


	ld c, 0xf6					; 33.3% black intensity
	call @fade_table


	ld c, 0xeb					; 66.6% black intensity
	call @fade_table


	ld c, 0x00					; 100% black intensity
	call @fill_table


; ==========================================================
; ==========================================================


	ld hl, 0xd000
	ld de, 0xd400



@copy_tables:
	ldi a, (hl)
	ld (de), a
	inc de


	bit 2, h					; 0x400 bytes
	jr z, @copy_tables


; ==========================================================
; ==========================================================


	xor a						; wram bank 1
	ldh (0x70), a


	pop bc
	ret



; ////////////////////////////////////////////////////////////
; ////////////////////////////////////////////////////////////



@read_table:
	ld b, 0x20					; 32 colors



@@loop:
	ldh a, (0x69)				; bgp color
	ldh (0x69), a
	ldi (hl), a

	ldh a, (0x69)
	ldh (0x69), a
	ldi (hl), a


	ldh a, (0x6b)				; obj color
	ldh (0x6b), a
	ldi (hl), a

	ldh a, (0x6b)
	ldh (0x6b), a
	ldi (hl), a


	dec b
	jr nz, @@loop


	ret



; ////////////////////////////////////////////////////////////
; ////////////////////////////////////////////////////////////



@fill_table:
	ld b, 0x20					; 32 colors
	ld a, c



@@loop:
	ldi (hl), a					; bgp color
	ldi (hl), a


	ldi (hl), a					; obj color
	ldi (hl), a


	dec b
	jr nz, @@loop


	ret



; ////////////////////////////////////////////////////////////
; ////////////////////////////////////////////////////////////



@fade_table:
	ld b, 0x08					; 8 palettes


@@loop:
	call @fade_bgp_color
	call @fade_obj_color

	call @fade_bgp_color
	call @fade_obj_color

	call @fade_bgp_color
	call @fade_obj_color

	call @fade_bgp_color
	call @fade_obj_color


	dec b
	jr nz, @@loop

	ret



; ########################################################
; ########################################################



@fade_bgp_color:
	push hl


	ldh a, (0x69)				; color low
	ldh (0x69), a
	ld l, a


	ldh a, (0x69)				; color high
	ldh (0x69), a
	ld h, a


	jr @fade_color



; ////////////////////////////////////////////////////////////
; ////////////////////////////////////////////////////////////



@fade_obj_color:
	push hl


	ldh a, (0x6b)				; color low
	ldh (0x6b), a
	ld l, a


	ldh a, (0x6b)				; color high
	ldh (0x6b), a
	ld h, a



; ////////////////////////////////////////////////////////////
; ////////////////////////////////////////////////////////////



;
;  Likely can be done using 16-bit (hl, bc) for red + blue math
;


@fade_color:
	ld a, l						; red  (---xxxxx)
	and a, 0x1f
	add a, c



@@red_black:
	cp a, 0xe0
	jr c, @@red_white

	xor a
	jr @@red_done



@@red_white:
	cp a, 0x20
	jr c, @@red_done

	ld a, 0x1f



@@red_done:
	ld e, a


; ==================================================
; ==================================================


	ld a, h						; blue  (-xxxxx--)
	rra :: rra
	and a, 0x1f
	add a, c



@@blue_black:
	cp a, 0xe0
	jr c, @@blue_white

	xor a
	jr @@blue_done



@@blue_white:
	cp a, 0x20
	jr c, @@blue_done

	ld a, 0x1f



@@blue_done:
	ld d, a


; ==================================================
; ==================================================


	ld a, h						; green (------xx) (xxx-----)
	sla l :: rla
	sla l :: rla
	sla l :: rla
	and a, 0x1f
	add a, c



@@green_black:
	cp a, 0xe0
	jr c, @@green_white

	xor a
	jr @@green_done



@@green_white:
	cp a, 0x20
	jr c, @@green_done

	ld a, 0x1f



@@green_done:
	or a						; clear carry flag (not ccf = invert!)
	rla :: rla :: rla
	rla :: rl d
	rla :: rl d
	or a, e
	ld e, a


; ================================================
; ================================================


	pop hl						; cache color

	ld a, e
	ldi (hl), a

	ld a, d
	ldi (hl), a

	ret


warnpc 0x6b30
