;
;  Code should be used only for educational, documentation and modding purposes
;


;
;  Vram upload codes (08-0e) relocated
;


%org($df77, $1e)

chr_swap_ed209:
	lda $66


.check1:
	cmp #$03					; stage 4
	bne .check2


	lda $90
	cmp #$80
	bne .exit
	beq .swap


; ==========================================================
; ==========================================================


.check2:
	cmp #$05					; stage 6
	bne .exit


	lda $90
	cmp #$c0
	bne .exit


	lda $91
	cmp #$18
	bne .exit



.swap:
	lda #$38
	sta $13

	lda #$3a
	sta $14


; ==========================================================
; ==========================================================


.exit:
	jmp $c113



; ##########################################################
; ##########################################################



hud_split_sprite_offscreen:
	lda #$f0				; fff0-ffff = visible
	cmp $5c
	bcc .exit


.hide:
	lda #$f0
	sta $5c					; invisible


.exit:
	rts



; ##############################################################
; ##############################################################



elevator_sprite_clean:
	sta $2000


	lda $05e8						; door fully open
	cmp #$03
	bne .exit


	lda #$f0						; hide non-player sprite
	sta $0220


.exit:
	rts



; ########################################################
; ########################################################



idle_pose_reset:
	lda $6f							; 2,4 = mid-frame
	lsr
	bcs .exit

	dec $6f							; 1,3 = normal


.exit:
	jmp $eac4



; /////////////////////////////////////////////////////////
; /////////////////////////////////////////////////////////



walk_pose_start:
	lda $6f
	bne .exit


	inc $6f


.exit:
	rts



; ##################################################################
; ##################################################################



wait_vblank_active:
	lda $09
	pha


	lda #$00					; skip nmi
	sta $09


	pla
	jsr wait_vblank


	rts



; //////////////////////////////////////////////////////////////
; //////////////////////////////////////////////////////////////



wait_vblank:
	pha


	lda #$00
	sta $08


.loop:
	cmp $08					; vblank flag
	beq .loop


; ==================================================
; ==================================================


	pla						; run vblank routine
	sta $09

	rts



; nop #150


warnpc $e0c9
