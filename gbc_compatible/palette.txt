/*
	Code should be used only for educational, documentation and modding purposes
*/


org 0x00a7, 0x0
	ld c, 0x40					; size

	ld a, b						; 00 = white
	or a
	jr z, @vram_white

	dec a						; 01, 03 = copy
	dec a						; 02 = black
	jr z, @vram_black



@vram_copy:
	call wait_blank

	ld a, (de)
	ld (hl), a

	inc e
	dec c

	jr nz, @vram_copy
	ret


; ==========================================================
; ==========================================================


@vram_white:
	ld d, 0xff
	jr @vram_fill



@vram_black:
	ld d, a


; ==========================================================
; ==========================================================


@vram_fill:
	call wait_blank
	ld (hl), d


	dec c
	jr nz, @vram_fill

	ret


warnpc 0x00c9



; ########################################################
; ########################################################



org 0x0c11, 0x0
	ld bc, 0xc140 :: call @update1
	ld bc, 0xc160 :: call @update1
	ld bc, 0xc180 :: call @update2
	ld bc, 0xc1a0 :: call @update3

	ld bc, 0xc1c0 :: call @update1
	ld bc, 0xc1e0 :: call @update1
	ld bc, 0xc200 :: call @update2

	ld bc, 0xc220 :: call @update1
	ld bc, 0xc240 :: call @update3

	call 0x11e5
	call 0x0adc

	ret



; ///////////////////////////////////////////////////////
; ///////////////////////////////////////////////////////



@update1:
	ld a, (bc)
	add a, a
	ret nc


	call 0x0cc6
	call 0x0ce8
	call 0x0d4e
	call 0x0cd8

	ret



; ///////////////////////////////////////////////////////
; ///////////////////////////////////////////////////////



@update2:
	ld a, (bc)
	add a, a
	ret nc


	call 0x0cc6
	call 0x0da1
	call 0x0e54
	call 0x0cd8

	ret



; ///////////////////////////////////////////////////////
; ///////////////////////////////////////////////////////



@update3:
	ld a, (bc)
	add a, a
	ret nc


	call 0x0cc6
	call 0x0e7c
	call 0x0cd8

	ret



; ///////////////////////////////////////////////////////
; ///////////////////////////////////////////////////////



wait_blank:
	ldh a, (0x41)
	and a, 0x02
	jr nz, wait_blank

	ret



; ///////////////////////////////////////////////////////
; ///////////////////////////////////////////////////////



wait_blank_af:
	push af


@@loop:
	ldh a, (0x41)
	and a, 0x02
	jr nz, @@loop

	pop af
	ret



; ///////////////////////////////////////////////////////
; ///////////////////////////////////////////////////////



boot_start:
	ld (0xdfbf), a				; save model


	ld hl, 0xce80				; wipe ram
	ld bc, 0x0080
	call 0x042a


	jp 0x00c9



; ////////////////////////////////////////////////////////
; ////////////////////////////////////////////////////////



ending_scene:
	ldi a, (hl)
	ld (de), a

	dec c
	inc e
	jr nz, ending_scene


; =========================================================
; =========================================================


	ld hl, 0xce80				; mono tilemap kludge
	ld c, 0x80
	ld a, 0x01


@@loop:
	ldi (hl), a

	dec c
	jr nz, @@loop

	ret



; ////////////////////////////////////////////////////////
; ////////////////////////////////////////////////////////



exit_room_palette:
	ld a, (0xc380)				; final boss
	cp a, 0x1c
	jp nz, exit_room_palette2

	jp write_white_palette


freepc 0x0cc6



; ########################################################
; ########################################################



org 0x0477, 0x0

write_color_palette:
	ld a, 0x01
	jp 0x00e1



; ////////////////////////////////////////////////////////
; ////////////////////////////////////////////////////////



write_black_palette:
	ld a, 0x02
	jr 0x0479



; /////////////////////////////////////////////////////////
; /////////////////////////////////////////////////////////



write_white_palette:
	xor a
	jr 0x0479



; /////////////////////////////////////////////////////////
; /////////////////////////////////////////////////////////



exit_room_palette2:
	ld a, (0xc3b8)				; 8 keys = stage clear
	cp a, 0x08
	jr z, write_white_palette

	jr write_black_palette


warnpc 0x048c



; #########################################################
; #########################################################



; flicker fixes


org 0x0177, 0x0
	ld a, 0x00					; boot


; ---------------------------------------------------------
; ---------------------------------------------------------


org 0x00dd, 0x0
	jp 0x0150					; boot


org 0x77d7, 0x1
	call write_white_palette	; boot


; ---------------------------------------------------------
; ---------------------------------------------------------


org 0x2956, 0x0
	call write_white_palette	; title


; ---------------------------------------------------------
; ---------------------------------------------------------


org 0x2ae1, 0x0
	call write_white_palette	; password


; ---------------------------------------------------------
; ---------------------------------------------------------


org 0x3e99, 0x0
	call write_white_palette	; map


; ---------------------------------------------------------
; ---------------------------------------------------------


org 0x5346, 0x1
	call exit_room_palette


; ---------------------------------------------------------
; ---------------------------------------------------------


org 0x73db, 0x1
	call write_white_palette	; stage load


org 0x2460, 0x0
	call write_white_palette	; stage load


org 0x2484, 0x0
	call write_white_palette	; stage load


org 0x1622, 0x0
	call write_white_palette	; stage restart


; ---------------------------------------------------------
; ---------------------------------------------------------


org 0x2ce0, 0x0
	call write_white_palette	; new game


; ---------------------------------------------------------
; ---------------------------------------------------------


org 0x2e58, 0x0
	call write_white_palette	; stage clear


org 0x2e67, 0x0
	ret							; stage clear
	nop :: nop

