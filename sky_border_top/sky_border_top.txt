/*
Source:
	minucce


License:
	Code should be used only for educational, documentation and modding purposes.
	Please keep derivative work open source.
*/


.org 0x0b3e
.area 0x0c0e - 0x0b3e


/* 	VBlank handler 	*/


	push af
	push hl
	push de
	push bc


	xor a						; clear lcd irq
	ldh (0x0f), a


	ld a, (0xd15c)				; game mode
	or a						; 0 = racing, 1+ = menu
	jp nz, 0x0c13


	inc a						; rom bank 1
	ld (0x2100),a


; #######################################


	call @write_tiles
	call 0x0f00					; copy world sprites
	call 0xff80					; oam dma



/*	Remaining time is very short when many sprites on-screen	*/

	ld a, (0xcfa2)				; obp0
	ldh (0x48), a

	ld a, (0xcfa0)				; obp1
	ldh (0x49), a


	xor a						; reset sky segment
	ld (0xce6b), a

	call 0x09c9					; simulate DMG STAT bug
	di


; =============================================


	ld a, (0xcfda)				; clear sky  (00-19)
	cp a, 0x1a
	jr nc, @@q_racing



@@q_loading:
	xor a
	ldh (0x42),a				; scy
	ldh (0x43),a				; scx
	jr @@q_end



@@q_racing:
	ld hl, 0xd162				; LCD interrupt handler  (09c9)
	ld a, 0x09
	ldd (hl), a
	ld (hl), 0xc9



@@q_end:
	ld a, 0x40					; stat = lyc irq
	ldh (0x41), a

	ld a, 0x03					; allow interrupts
	ldh (0xff), a

	xor a						; clear bad IRQs
	ldh (0x0f), a


	ei							; allow pending lyc
	call 0x113c					; restore rom1 bank


; =============================================


@z_0b72:
	ld hl, 0xd0c4
	inc (hl)

	ld hl, 0xd101
	inc (hl)

	ld hl, 0xcfa7
	inc (hl)



@z_0b87:
	ld a, (0xcfe0)
	or a
	jr z, @z_0b91

	dec a
	ld (0xcfe0), a



@z_0b91:
	ld a, (0xce54)
	or a
	jr z, @z_0b9d

	dec a
	and a, 0x1f
	ld (0xce54), a



@z_0b9d:
	ld a, (0xce53)
	or a
	jr z, @z_0ba9

	dec a
	and a, 0x3f
	ld (0xce53), a
	
	

@z_0ba9:
	ld a, (0xce04)
	inc a
	and a, 0x3f

	ld (0xce04), a
	jr nz, @z_0bfe



	ld a, (0xce05)
	inc a
	daa
	ld (0xce05), a

	cp a, 0x60
	jr nz, @z_0bfe

	xor a
	ld (0xce05),a



	ld a, (0xce06)
	inc a
	daa
	ld (0xce06), a



@z_0bfe:
	ld hl, 0xcdf4
	ldh a, (0x44)
	ldd (hl), a					; Unused ??
	ld (hl), 0xff				; Unused ??


; ==========================


@z_exit:
	pop bc
	pop de
	pop hl
	pop af

	reti


; #######################################


/*	Split VRAM transfers	*/


@write_tiles:
	ld a, (0xcfa7)				; frame #

	or a						; 00 = player name
	jp z, 0x10e5

	dec a						; 01 = enemy name
	jp z, 0x0ff7

	dec a						; 02 = miles
	jp z, 0x0f9f

	dec a						; 03 = health, mph, rank
	jp z, @z_0f69

	ret


.endarea


; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



.org 0x0f59
.area 0x0f69 - 0x0f59


.org 0x0f63

@z_0f69:
	call 0x0fe7					; mph
	call 0x0fd7					; rank
								; health

.endarea


; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


.org 0x0ff7
.area 0x1028 - 0x0ff7


/*	Copy name to VRAM	*/


	ld a, (0xd0b4)
	or a
	ret z


	ld hl, 0xd0b1
	inc (hl)

	ld a, (hl)
	cp a, 0x04
	jr nz, @z_1014

	ld l, 0xb4					; d0b4 = 00
	ld (hl), 0x00



@z_1014:
	dec a

	add a, a
	add a, a
	add a, a
	add a, a
	add a, 0x20

	ld e, a						; vram dst (enemy name)
	ld d, 0x96

	sub a, 0x20					; src tile
	add a, 0x31
	ld l, a

	ld a, 0x00					; keep carry - no xor
	adc a, 0xd0
	ld h, a


	jr @z_1028					; copy tile


.endarea


; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


.org 0x1028
.area 0x1079 - 0x1028


/*
	warning: shared 8x8 tile copy routine


	hl = src tile  (dxx1)
	de = vram dst  (9xx0)
*/


@z_1028:
	ld b, 0xff

	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 

	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 

	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 

	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 
	ldi a, (hl) :: xor a, b :: ld (de), a :: inc e 

	ret


.endarea


; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


.org 0x10bc
.area 0x10d4 - 0x10bc


/*	Copy name to VRAM	*/


	ld hl, 0xd071				; tile src
	ld de, 0x95e0				; vram dst  (player name)

	add a, a
	add a, a
	add a, a
	add a, a
	ld c, a

	add a, e
	ld e, a
	ld a, 0x00
	adc a, d
	ld d, a

	ld a, c
	add a, l
	ld l, a
	ld a, 0x00
	adc a, h
	ld h, a


.endarea


; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


.org 0x10f7
.area 0x110f - 0x10f7


/*	Copy name to VRAM	*/


	ld hl, 0xd071				; tile src
	ld de, 0x95e0				; vram dst  (player name)

	add a, a
	add a, a
	add a, a
	add a, a
	ld c, a

	add a, e
	ld e, a
	ld a, 0x00
	adc a, d
	ld d, a

	ld a, c
	add a, l
	ld l, a
	ld a, 0x00
	adc a, h
	ld h, a


.endarea


; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


.org 0x0fc7
.area 0x0fd7 - 0x0fc7


/*	hl = rom, de = 8f90		*/


@z_0fc7:
	ldi a, (hl) :: ld (de), a :: inc e
	ldi a, (hl) :: ld (de), a :: inc e
	ldi a, (hl) :: ld (de), a :: inc e
	ldi a, (hl) :: ld (de), a :: inc e

	dec b
	jr nz, @z_0fc7
	
	ret


.endarea
